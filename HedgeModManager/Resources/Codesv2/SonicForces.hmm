!!VERSION 1.0

Patch "Stop Timer" in "Cheats" by "CodenameGamma"
WriteNop(0x14017EE5A, 5)

Patch "Disable Ring Loss From Damage" in "Cheats" by "CodenameGamma"
WriteNop(0x1404F77AC, 5)

Patch "Disable Boost Drain" in "Cheats" by "CodenameGamma"
WriteNop(0x1404CFD62, 0x00000005)
WriteNop(0x1403DF93E, 0x00000007)

Patch "Disable Damage" in "Cheats" by "SuperSonic16"
WriteProtected<byte>(0x14046E1E0, 0xC3)

Patch "Disable Dashpads" in "Gameplay" by "SuperSonic16"
WriteProtected<byte>(0x14046F9A0, 0xC3)

Patch "Disable Ring Loss From Super Sonic" in "Cheats" by "SuperSonic16"
WriteNop(0x1404E1F54, 0x03)

Patch "Enable Super Sonic with 1 Ring" in "Cheats" by "SuperSonic16"
WriteProtected<uint>(0x1404E1E8F, 0x4890C931)
WriteProtected<byte>(0x1404E1E9B, 0x7E)

Patch "Ignore Ring Count When Getting Hit" in "Cheats" by "SuperSonic16"
WriteNop(0x14046E4EE, 0x06)

Patch "Max Rings" in "Cheats" by "SuperSonic16"
WriteProtected<uint>(0x1403DA766, 0x0010BBE9)
WriteProtected<ushort>(0x1403DA76A, 0x9000)
WriteProtected<uint>(0x1403DB826, 0x0003E7B9)
WriteProtected<uint>(0x1403DB82A, 0x1C488900)
WriteProtected<uint>(0x1403DB82E, 0xE9CF4D89)
WriteProtected<uint>(0x1403DB832, 0xFFFFEF36)

Patch "Widescreen Fix + FOV" in "Graphics" by "Muzzarino Hezibeth" does "Dynamically adjusts the aspect ratio and field of view to match the game resolution (recommended for ultrawide)."
WriteProtected<float>(0x141DBED94, 1.7777777777777778f)
WriteProtected<float>(0x14086BBE3, 1)
WriteProtected<byte>(0x14086BA8B, 0xE9)
WriteProtected<uint>(0x14086BA8C, 0x00000145)
WriteNop(0x14086BA90, 2)
WriteProtected<uint>(0x14086BBD5, 0xE05E0FF3)
WriteProtected<uint>(0x14086BBD9, 0x4D413D80)
WriteProtected<uint>(0x14086BBDD, 0x74010180)
WriteProtected<ushort>(0x14086BBE1, 0x680E)
WriteProtected<uint>(0x14086BBE7, 0x0C5E0FF3)
WriteProtected<uint>(0x14086BBEB, 0xC4834824)
WriteProtected<byte>(0x14086BBEF, 0x08)
WriteProtected<uint>(0x14086BBF0, 0xE9C1280F)
WriteProtected<uint>(0x14086BBF4, 0xFFFFFE9A)
WriteProtected<byte>(0x1406781CE, 0xE9)
WriteProtected<uint>(0x1406781CF, 0x001F39E3)
WriteProtected<ushort>(0x14086BBB6, 0x05C6)
WriteProtected<uint>(0x14086BBB8, 0x01804D64)
WriteProtected<ushort>(0x14086BBBC, 0xE801)
WriteProtected<uint>(0x14086BBBE, 0xFFED410E)
WriteProtected<byte>(0x14086BBC2, 0xE9)
WriteProtected<uint>(0x14086BBC3, 0xFFE0C60C)
WriteProtected<uint>(0x1401255FD, 0x01F4B31C)
WriteProtected<uint>(0x1401261E7, 0x01F4A732)
WriteProtected<uint>(0x140127897, 0x01F49082)
WriteProtected<uint>(0x140127C1A, 0x01F48CFF)
WriteProtected<uint>(0x1401284E7, 0x01F48432)
WriteProtected<uint>(0x14012EC8E, 0x01F41C8B)
WriteProtected<uint>(0x140132E05, 0x01F3DB14)
WriteProtected<uint>(0x140133D05, 0x01F3CC14)
WriteProtected<uint>(0x14039B307, 0x01CD5612)
WriteProtected<uint>(0x14066A6C7, 0x01A06252)
WriteProtected<uint>(0x1406AD57F, 0x019C339A)
WriteProtected<uint>(0x1406E183C, 0x0198F0DD)
WriteProtected<uint>(0x1406E5025, 0x0198B8F4)
WriteProtected<uint>(0x14073FB69, 0x01930DB0)
WriteProtected<uint>(0x14073FBBE, 0x93110FF3)
WriteProtected<uint>(0x14073FBC2, 0x000000B4)
WriteNop(0x14073FBC6, 2)
WriteProtected<uint>(0x142B1A6BA, 0xFF55625F)
WriteProtected<uint>(0x142B1B89B, 0xFF55507E)
WriteProtected<ushort>(0x14086BB60, 0x05C6)
WriteProtected<uint>(0x14086BB62, 0x01804DBA)
WriteProtected<ushort>(0x14086BB66, 0xE900)
WriteProtected<uint>(0x14086BB68, 0xFFFFFF2A)
WriteProtected<ushort>(0x1406C3EB9, 0x59EB)
WriteNop(0x1406C3EBB, 8)
WriteProtected<ushort>(0x1406C3F14, 0x44F3)
WriteProtected<uint>(0x1406C3F16, 0x248C100F)
WriteProtected<uint>(0x1406C3F1A, 0x000000A0)
WriteProtected<ushort>(0x1406C3F1E, 0x05EB)
WriteProtected<uint>(0x1406C3F20, 0xD5D80BE9)
WriteProtected<uint>(0x1406C3F24, 0xF505C604)
WriteProtected<uint>(0x1406C3F28, 0x00019AC9)
WriteProtected<ushort>(0x1406C3F2C, 0x95EB)
WriteProtected<byte>(0x1406E180F, 0xE9)
WriteProtected<uint>(0x1406E1810, 0x0018A322)
WriteProtected<ushort>(0x1406E1814, 0x5B0F)
WriteProtected<byte>(0x1406E1816, 0xC0)
WriteProtected<uint>(0x14086BA92, 0x90905FEB)
WriteProtected<ushort>(0x14086BAF3, 0x36EB)
WriteProtected<uint>(0x14086BB36, 0x6E0F4166)
WriteProtected<ushort>(0x14086BBA5, 0x05C6)
WriteProtected<uint>(0x14086BBA7, 0x01804D75)
WriteProtected<ushort>(0x14086BBAB, 0xE801)
WriteProtected<uint>(0x14086BBAD, 0xFFE0CC0F)
WriteProtected<byte>(0x14086BBB1, 0xE9)
WriteProtected<uint>(0x14086BBB2, 0xFFD2243C)
WriteProtected<byte>(0x14058DFED, 0xE9)
WriteProtected<uint>(0x14058DFEE, 0x002DDBB3)
WriteProtected<byte>(0x14086BB3A, 0xC6)
WriteProtected<uint>(0x14086BB3B, 0x6E0F4466)
WriteProtected<byte>(0x14086BB3F, 0xE7)
WriteProtected<uint>(0x14086BB40, 0xE45B0F45)
WriteProtected<uint>(0x14086BB44, 0x6E0F4566)
WriteProtected<byte>(0x14086BB48, 0xEE)
WriteProtected<uint>(0x14086BB49, 0xED5B0F45)
WriteProtected<uint>(0x14086BB4D, 0x5E0F45F3)
WriteProtected<byte>(0x14086BB51, 0xE5)
WriteProtected<uint>(0x14086BB52, 0x110F44F3)
WriteProtected<uint>(0x14086BB56, 0x804DC225)
WriteProtected<ushort>(0x14086BB5A, 0xE901)
WriteProtected<uint>(0x14086BB5C, 0xFFE75CB4)
WriteProtected<uint>(0x14086BB05, 0x88352F0F)
WriteProtected<byte>(0x14086BB09, 0x32)
WriteProtected<uint>(0x14086BB0A, 0x14730155)
WriteProtected<uint>(0x14086BB0E, 0x355E0FF3)
WriteProtected<uint>(0x14086BB12, 0x0155327E)
WriteProtected<uint>(0x14086BB16, 0xCE590FF3)
WriteProtected<uint>(0x14086BB1A, 0x35100FF3)
WriteProtected<uint>(0x14086BB1E, 0x01553272)
WriteProtected<uint>(0x14086BB22, 0xC65E0FF3)
WriteProtected<byte>(0x14086BB26, 0xE9)
WriteProtected<uint>(0x14086BB27, 0x00000035)
WriteProtected<uint>(0x14086BB2B, 0x4DEF3D83)
WriteProtected<uint>(0x14086BB2F, 0x74010180)
WriteProtected<byte>(0x14086BB33, 0xEE)
WriteProtected<ushort>(0x14086BB34, 0xCFEB)
WriteProtected<ushort>(0x14086BC05, 0x05C6)
WriteProtected<uint>(0x14086BC07, 0x01804D15)
WriteProtected<ushort>(0x14086BC0B, 0xE801)
WriteProtected<uint>(0x14086BC0D, 0xFFE0CBAF)
WriteProtected<byte>(0x14086BC11, 0xE9)
WriteProtected<uint>(0x14086BC12, 0xFFCF5C04)
WriteProtected<byte>(0x140561815, 0xE9)
WriteProtected<uint>(0x140561816, 0x0030A3EB)

Patch "Wispon Gauge Stay's Full" in "Cheats" by "CodenameGamma"
WriteNop(0x1404D228C, 0x00000004)

Patch "Wispon Special Always Ready (Use Wispon Anytime)" in "Cheats" by "CodenameGamma"
WriteProtected<byte>(0x1423C060C, 0x01)

Patch "Disable Wispon Boundaries" in "Cheats" by "CodenameGamma"
WriteNop(0x140267527, 0x00000005)

Patch "360 Degree Movement" in "Gameplay" by "Skyth"
WriteNop(0x1404615B7, 4)

Code "75 FPS (experimental)" in "Graphics" by "M&M"
Write<float>(GetPointer(0x14240E818, 0x34), 1.0f / 75.0f); /* internal framerate */
Write<float>(0x88D23BD8, 75.0f); /* external framerate */
WriteNop(0x14061AE3B, 3); /* nop out framerate changer */
WriteNop(0x14061D4FD, 5); /* nop out framerate changer */
WriteNop(0x1406E5F96, 5); /* nop out framerate changer */

Code "120 FPS (experimental)" in "Graphics" by "M&M"
Write<float>(GetPointer(0x14240E818, 0x34), 1.0f / 120.0f); /* internal framerate */
Write<float>(0x88D23BD8, 120.0f); /* external framerate */
WriteNop(0x14061AE3B, 3); /* nop out framerate changer */
WriteNop(0x14061D4FD, 5); /* nop out framerate changer */
WriteNop(0x1406E5F96, 5); /* nop out framerate changer */

Code "144 FPS (experimental)" in "Graphics" by "M&M"
Write<float>(GetPointer(0x14240E818, 0x34), 1.0f / 144.0f); /* internal framerate */
Write<float>(0x88D23BD8, 144.0f); /* external framerate */
WriteNop(0x14061AE3B, 3); /* nop out framerate changer */
WriteNop(0x14061D4FD, 5); /* nop out framerate changer */
WriteNop(0x1406E5F96, 5); /* nop out framerate changer */

Code "165 FPS (experimental)" in "Graphics" by "M&M"
Write<float>(GetPointer(0x14240E818, 0x34), 1.0f / 165.0f); /* internal framerate */
Write<float>(0x88D23BD8, 165.0f); /* external framerate */
WriteNop(0x14061AE3B, 3); /* nop out framerate changer */
WriteNop(0x14061D4FD, 5); /* nop out framerate changer */
WriteNop(0x1406E5F96, 5); /* nop out framerate changer */
