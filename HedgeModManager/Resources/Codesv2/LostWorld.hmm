!!VERSION 1.0

Patch "Disable Ring Loss" in "Cheats" by "Sajid" does "Disables the loss of rings upon being damaged by an enemy."
WriteNop(ASLR(0x00866900), 2)

Patch "Disable Super Music" in "Audio" by "Sajid" does "Prevents the Super Sonic theme from overwriting the stage music."
WriteNop(ASLR(0x0091ABAD), 6)

Patch "Invisible Cloak Sonic" in "Graphics" by "Muzzarino" does "Turns Sonic's textures into a highly reflective material to blend in (requires the Jump or Spin button to be pressed to enable it)."
WriteNop(ASLR(0x0085C68E), 6)

Patch "Enable Stage Retry Option" in "UI" by "Sajid" does "Enables the Retry option from the game's time attack mode in normal play."
WriteAsmHook
(
    ASLR(0x005169E3),
    HookBehavior.After,
    "mov DWORD PTR [ebp+8], 1"
)

Patch "16:10 In-Game Resolution" in "Graphics" by "ĐeäTh" does "Changes the game in-game resolution to a 16:10 aspect ratio. Perfect for the Steam Deck."
WriteProtected<int>(ASLR(0x00D56D30), 0x3FCCCCCD)

Patch "21:9 (2560x1080) In-Game Resolution" in "Graphics" by "ĐeäTh" does "Changes the game in-game resolution to a 21:9 (2560x1080) aspect ratio."
WriteProtected<int>(ASLR(0x00D56D30), 0x4017B426)

Patch "21:9 (3440x1440) In-Game Resolution" in "Graphics" by "ĐeäTh" does "Changes the game in-game resolution to a 21:9 (3440x1440) aspect ratio."
WriteProtected<int>(ASLR(0x00D56D30), 0x4018E38E)

Patch "21:9 (3840x1600) In-Game Resolution" in "Graphics" by "ĐeäTh" does "Changes the game in-game resolution to a 21:9 (3840x1600) aspect ratio."
WriteProtected<int>(ASLR(0x00D56D30), 0x4019999A)

Patch "32:9 In-Game Resolution" in "Graphics" by "ĐeäTh" does "Changes the game in-game resolution to a 32:9 aspect ratio."
WriteProtected<int>(ASLR(0x00D56D30), 0x40638E39)

Code "Widescreen Support" in "Graphics" by "Muzzarino" does "Dynamically adjusts the aspect ratio to match the game resolution (recommended for ultrawide)."
var ptr = GetPointer(ASLR(0x00FD3CA8))
WriteProtected<float>(ASLR(0x00D56D30), ptr != 0 ? (float)(Read<uint>(ptr + 0xF8)) / (float)(Read<uint>(ptr + 0xFC)) : 16f / 9f)
WriteProtected<double>(ASLR(0x00EB2E00), (Double)Read<float>(ASLR(0x00D56D30)))
WriteProtected<float>(ASLR(0x00FB6AF0), 2f * (float)Math.Atan((float)Math.Tan(60f * 0.00872664625997164788461845384244) / (Read<float>(ASLR(0x00D56D30)) < 16f / 9f ? Read<float>(ASLR(0x00D56D30)) : 16f / 9f) * (16f / 9f)))
WriteProtected<float>(ASLR(0x00D6F364), 720f / (Read<float>(ASLR(0x00D56D30)) < 16f / 9f ? Read<float>(ASLR(0x00D56D30)) : 16f / 9f) * (16f / 9f)))
WriteProtected<float>(ASLR(0x00D6F360), Read<float>(ASLR(0x00D6F364)) * Read<float>(ASLR(0x00D56D30)))

string code = $@"mulss xmm0,[{ASLR(0x00E737E4)}]
cvtps2pd xmm0,xmm0
pushad
mov eax,{ASLR(0x00C76D12)}
call eax
mov eax,{ASLR(0x00C64010)}
call eax
cvtsi2sd xmm2,eax
cvtsi2sd xmm1,edx
popad
divsd xmm2,xmm1
movss xmm1,[esp+0x4]
cvtps2pd xmm1,xmm1
minsd xmm1,xmm2
divsd xmm1,xmm2
divsd xmm0,xmm1
sub esp,0x8
movsd [esp],xmm0
fld qword ptr [esp]
add esp,0x8
fld1
fpatan
fdiv dword ptr [{ASLR(0x00E737E4)}]
fstp dword ptr [esp]
mov eax,{ASLR(0x008FF5B0)}
call eax"

string code2 = $@"mulss xmm0,[{ASLR(0x00E737E4)}]
cvtps2pd xmm0,xmm0
pushad
mov eax,{ASLR(0x00C76D12)}
call eax
mov eax,{ASLR(0x00C64010)}
call eax
cvtsi2sd xmm2,eax
cvtsi2sd xmm1,edx
popad
divsd xmm2,xmm1
movss xmm1,[esp+0x8]
cvtps2pd xmm1,xmm1
minsd xmm1,xmm2
divsd xmm1,xmm2
divsd xmm0,xmm1
sub esp,0x8
movsd [esp],xmm0
fld qword ptr [esp]
add esp,0x8
fld1
fpatan
fdiv dword ptr [{ASLR(0x00E737E4)}]
fstp dword ptr [esp+0x4]
mov eax,{ASLR(0x00967820)}
call eax"

string code3 = $@"mov eax,[{ASLR(0x00FD3CA8)}]
test eax,eax
je NoVPaddress
mov edx,[eax+0xFC]
mov eax,[eax+0xF8]
NoVPaddress:"

string code4 = $@"cvtdq2ps xmm0,xmm0
cvtdq2ps xmm1,xmm1
sub esp,0x8
movss [esp],xmm0
movss [esp+0x4],xmm1
mov eax,[{ASLR(0x00FD3CA8)}]
movd xmm0,[eax+0xF8]
movd xmm1,[eax+0xFC]
mov eax,{ASLR(0x00C64010)}
call eax
sar eax,1
sar edx,1
cvtdq2ps xmm0,xmm0
cvtdq2ps xmm1,xmm1
divss xmm0,xmm1
movss xmm4,xmm0
movss xmm1,[esp]
divss xmm1,[esp+0x4]
minss xmm0,xmm1
divss xmm0,xmm1
divss xmm1,xmm4
mulss xmm1,xmm0
cvtsi2ss xmm4,eax
movss xmm5,xmm4
divss xmm4,xmm1
subss xmm4,xmm5
addss xmm2,xmm4
cvtsi2ss xmm4,edx
movss xmm5,xmm4
divss xmm4,xmm0
subss xmm4,xmm5
addss xmm3,xmm4
movss xmm4,xmm0
movss xmm5,xmm1
movss xmm0,[esp]
movss xmm1,[esp+0x4]
mulss xmm0,xmm5
mulss xmm1,xmm4
add esp,0x8
cvtps2dq xmm0,xmm0
cvtps2dq xmm1,xmm1"

string code5 = $@"mov eax,{ASLR(0x00C64010)}
call eax
cvtsi2ss xmm3,eax
cvtsi2ss xmm2,edx
divss xmm3,xmm2"

string code6 = $@"mov eax,{ASLR(0x00C76F67)}
call eax
movss xmm1,xmm0
divss xmm0,[{ASLR(0x00D56D30)}]
divss xmm0,[{ASLR(0x00D56D2C)}]
maxss xmm0,xmm1"

string code7 = $@"movss xmm0,xmm5
divss xmm0,[edi+0x1B4]
minss xmm0,[{ASLR(0x00D56D30)}]
divss xmm0,[{ASLR(0x00D56D30)}]
mulss xmm5,xmm0"

string code8 = $@"movss xmm4,[edi+0x1B0]
divss xmm4,[edi+0x1B4]
maxss xmm4,[{ASLR(0x00D56D30)}]
divss xmm4,[{ASLR(0x00D56D30)}]
divss xmm7,xmm4"

string code9 = $@"movss xmm6,[{ASLR(0x00D56D30)}]
divss xmm0,[{ASLR(0x00D56D2C)}]
minss xmm6,xmm0
divss xmm6,xmm0
movss xmm0,xmm6"

string code10 = $@"movss xmm5,[{ASLR(0x00E72E24)}]
divss xmm5,[{ASLR(0x00D56D2C)}]
minss xmm5,[{ASLR(0x00D56D30)}]
divss xmm2,xmm5
mulss xmm2,[{ASLR(0x00D56D30)}]"

string code11 = $@"movss xmm5,[{ASLR(0x00E72E24)}]
divss xmm5,[{ASLR(0x00D56D2C)}]
maxss xmm5,[{ASLR(0x00D56D30)}]
mulss xmm1,xmm5
divss xmm1,[{ASLR(0x00D56D30)}]"

if (Read<byte>(ASLR(0x004178AB)) == 0xE8)
{
    WriteAsmHook(code, ASLR(0x004178AB), HookBehavior.Replace)
    WriteAsmHook(code, ASLR(0x00419601), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x0041E9D0), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x0042589C), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x004272F5), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x00427DF0), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x00428878), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x004292FE), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x00437490), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x0043CB11), HookBehavior.Replace)
    WriteAsmHook(code2, ASLR(0x00530664), HookBehavior.Replace)
    WriteAsmHook(code3, ASLR(0x005305F9), HookBehavior.Replace)
    WriteAsmHook(code4, ASLR(0x004A824C), HookBehavior.Before)
    WriteAsmHook(code5, ASLR(0x00401737), HookBehavior.Replace)
    WriteAsmHook(code6, ASLR(0x0043D41E), HookBehavior.Replace)
    WriteAsmHook(code6, ASLR(0x00441D41), HookBehavior.Replace)
    WriteAsmHook(code7, ASLR(0x0049C380), HookBehavior.Before)
    WriteAsmHook(code8, ASLR(0x0049C3BA), HookBehavior.Before)
    WriteAsmHook(code9, ASLR(0x0041EA22), HookBehavior.Before)
    WriteAsmHook(code10, ASLR(0x008FF420), HookBehavior.Before)
    WriteAsmHook(code11, ASLR(0x008FF456), HookBehavior.Before)
}

Patch "Disable Lockon (Except for Unbeatable Bosses)" in "Gameplay" by "Sajid" does "Disables the player's ability to Homing Attack or Kick enemies and objects. Enabled for a few bosses to prevent softlocks."
WriteProtected<uint>(ASLR(0x00537D15), 0x5005)
WriteProtected<uint>(ASLR(0x0053AFD1), 0x1003)
WriteProtected<uint>(ASLR(0x005A8121), 0x1003)
WriteProtected<uint>(ASLR(0x005C7A91), 0x1003)
WriteProtected<uint>(ASLR(0x00587A71), 0x1003)
WriteProtected<uint>(ASLR(0x0059889A), 0x5005)
WriteProtected<uint>(ASLR(0x0058FDC1), 0x1003)

Patch "Disable Voice Option Completely" in "Audio" by "M&M" does "Prevents any sound considered as 'Voice' from playing, which in result prevents the music from lowering in volume. This is preferable over lowering the 'Voice' volume to 0 in the game's settings."
WriteNop(ASLR(0x004A3D82), 5)

Patch "Enable DLC Music in Battle Mode" in "Audio" by "ĐeäTh" does "Enables the level music of the DLC levels to play during the game's multiplayer mode."
WriteNop(ASLR(0x0095B570), 6)

Patch "Sideways Wall Jump Fix" in "Fixes" by "Sajid"
WriteNop(ASLR(0x008C142C), 2)

Patch "DLC Stages Always Replayable" in "Cheats" by "ĐeäTh" does "Disables the 100000 score requirement for unlocking the DLC levels once they are completed. Instead they will always stay on the world map."
WriteNop(ASLR(0x0090D2BC), 2);
String code = $@"mov eax, {ASLR(0x0090D210)}
push 0
push 0
push 0
mov ecx, esi
call eax
mov eax, {ASLR(0x0090D210)}
push 0
push 0
push 1
mov ecx, esi
call eax
mov eax, {ASLR(0x0090D210)}
push 0
push 0
push 2
mov ecx, esi
call eax
mov ecx, [ebp+0xC]
mov eax, [ecx]
cmp eax, -4";
WriteAsmHook
(
    ASLR(0x00911F2D),
    HookBehavior.Replace,
    code
)

WriteAsmHook
(
    ASLR(0x00912332),
    HookBehavior.After,
    "mov edi, 1"
)
WriteProtected<byte>(ASLR(0x00912338), 0x57);
WriteProtected<byte>(ASLR(0x00912326), 0x6A, 0x00);
WriteNop(ASLR(0x0094594F), 12);

Patch "Disable DLC Prizes" in "Gameplay" by "ĐeäTh" does "Disables the prizes given by the DLC levels (bomb wisp) upon completion."
WriteNop(ASLR(0x0094595B), 12);
WriteNop(ASLR(0x00945630), 5);

Patch "Fix Depth Of Field Draw Order" in "Fixes" by "Sajid" does "Changes the pseudo-dof implementation of the game into the proper one seen on Wii U."
static int p_DofRes = (int)ASLR(0x00FEFC7C);
static int p_GrassRes = (int)ASLR(0x00FB6D1C);
static int p_ShadowRes = (int)ASLR(0x00FB6D1D);
static int p_RetAddress = (int)ASLR(0x00904E94);

WriteAsmHook
(
    $@"mov BYTE PTR [edi+28Ch], 0
    movzx eax,byte ptr [{p_DofRes}]
    mov [edi+28Ch], al
    cmp byte ptr [{p_GrassRes}], 0
    sete cl
    mov [edi+49Ch], cl
    mov al, [{p_ShadowRes}]
    mov [edi+4F4h], al

    mov eax, {p_RetAddress}
    jmp eax",
    ASLR(0x00904E64), HookBehavior.Replace
)

Patch "1280x720 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 1280x720 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 1280);
WriteProtected<float>(ASLR(0x00D593B0), 720);

Patch "1920x1080 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 1920x1080 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 1920);
WriteProtected<float>(ASLR(0x00D593B0), 1080);

Patch "2560x1440 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 2560x1440 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 2560);
WriteProtected<float>(ASLR(0x00D593B0), 1440);

Patch "3840x2160 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 3840x2160 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 3840);
WriteProtected<float>(ASLR(0x00D593B0), 2160);

Patch "2560x1080 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 2560x1080 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 2560);
WriteProtected<float>(ASLR(0x00D593B0), 1080);

Patch "3440x1440 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 3440x1440 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 3440);
WriteProtected<float>(ASLR(0x00D593B0), 1440);

Patch "5120x2160 Movie Player" in "Graphics" by "ĐeäTh" does "Forces the CRIWARE video player to use a 5120x2160 viewport. This is only useful for mods that have higher resolution video files."
static float ms_RenderTextureMultiplier = 1.0f;
fixed(float* multiplierPtr = &ms_RenderTextureMultiplier)
{
    WriteAsmHook
    (
        ASLR(0x0049C398),
        HookBehavior.Replace,
        $"mulss xmm5, [{(uint)multiplierPtr}]"
    )

    WriteAsmHook
    (
        ASLR(0x0049C3C2),
        HookBehavior.Replace,
        $"mulss xmm7, [{(uint)multiplierPtr}]"
    )
}

WriteProtected<float>(ASLR(0x00D61CE8), 5120);
WriteProtected<float>(ASLR(0x00D593B0), 2160);

Patch "Force Language to Japanese" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 0");

Patch "Force Language to English" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 1");

Patch "Force Language to French" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 2");

Patch "Force Language to German" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 3");

Patch "Force Language to Italian" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 4");

Patch "Force Language to Spanish" in "System" by "M&M & ĐeäTh"
WriteAsmHook(ASLR(0x004AB9FF), HookBehavior.Replace, "mov eax, 5");

Patch "Disable Wisp Hints" in "UI" by "Sajid"
WriteNop(ASLR(0x0091AAF8), 6)

Patch "Fix Rigid Bodies Falling Through Collision" in "Fixes" by "ĐeäTh & Darío" does "Fixes enemies falling through the collision of the level ocassionally." 
static int p_updateBroadphaseAndResetCollisionInformationOfWarpedBody = (int)ASLR(0x00AED500);
static int p_setLinearVelocity = (int)ASLR(0x00B88220);

WriteAsmHook
(
    $@"mov eax, {p_setLinearVelocity}
    call eax
    mov edx, [esi+14h]
    mov edx, [edx+10h]
    push edx
    mov eax, {p_updateBroadphaseAndResetCollisionInformationOfWarpedBody}
    call eax
    add esp, 4",
    ASLR(0x004B974F), HookBehavior.Replace
)

Patch "Fix Depth Effects On Intel GPUs" in "Fixes" by "Skyth"
WriteAsmHook(ASLR(0x00C2B233), HookBehavior.Replace, @"
mov eax, dword ptr [ebp + 8]

loop:
cmp dword ptr [eax], 0xFFFF
jz break

cmp dword ptr [eax], 0x3B7F0001
jnz continue
cmp dword ptr [eax + 4], 0x377F0001
jnz continue
cmp dword ptr [eax + 8], 0x3F7F0001
jnz continue

mov dword ptr [eax], 0x3F800000
mov dword ptr [eax + 4], 0
mov dword ptr [eax + 8], 0
jmp break

continue:
add eax, 4
jmp loop

break:
mov eax, [ecx + 0x64]
mov ecx, [eax]
");

Patch "Fix Pull Switch Grip Height" in "Fixes" by "ĐeäTh" does "Fixes the position of Sonic's grip compared to the light switches found in Silent Forest Act 4."
WriteProtected<float>(ASLR(0x00DF2D14), -10.5f)

Patch "No Instant Death Bomb Carts" in "Cheats" by "ĐeäTh"
WriteNop(ASLR(0x007D82A2), 3);

Patch "Infinite Bounce Attacks" in "Cheats" by "ĐeäTh" does "Disables the 3 times limit on the bounce attack."
WriteNop(ASLR(0x008CA177), 4);

Patch "Traditional Countdown Timer" in "UI" by "ĐeäTh" does "Displays the timer in the typical 00:00.00 format instead of the 000 format found in the game. The timer's functionality is not changed."
// Allow bigger time constraints to be displayed on HUD
WriteProtected<int>(ASLR(0x00501CC5), 3599);
WriteProtected<int>(ASLR(0x00501CCC), 3599);

// Lower Count Down Timer flashing red to 1 minute from 99 seconds
WriteProtected<byte>(ASLR(0x00501D31), 59);

// Remove check to only update the HUD if the seconds value changed
WriteNop(ASLR(0x00501CDE), 2);

static int ms_fpSnprintf = (int)ASLR(0x004047E0);
static int ms_pRetAddressCountDownUpdate = (int)ASLR(0x00501CF7);

static int ms_milliseconds = 0;
static string ms_format = "%02d:%02d.%02d";
static IntPtr ms_pFormat = System.Runtime.InteropServices.Marshal.StringToHGlobalAnsi(ms_format);

fixed(int* millisecondsPtr = &ms_milliseconds)
{
    // Calculate Milliseconds
    WriteAsmHook
    (
        $@"mov eax, [ebp - 0x3C]
        mov edx, 0
        mov ecx, 100
        div ecx
        sub ecx, edx
        cmp ecx, 100
        jne ignoreFallback
        mov ecx, 00

        ignoreFallback:
        mov [{(uint)millisecondsPtr}], ecx
        mov ecx, [ebx + 128h]",
        ASLR(0x0091685E), HookBehavior.Replace
    )

    // Change Display String for Count Down Timer
    WriteAsmHook
    (
        $@"mov eax, [{(uint)millisecondsPtr}]
        push eax
        mov edx, 0
        mov eax, edi
        mov ecx, 0x3C
        div ecx
        push edx
        push eax
        push {(uint)ms_pFormat}
        lea eax, [ebp - 44h]
        push 40h
        push eax
        mov [esi + 1B0h], edi
        mov eax, {ms_fpSnprintf}
        call eax
        add esp, 8
        mov eax, {ms_pRetAddressCountDownUpdate}
        jmp eax",
        ASLR(0x00501CE0), HookBehavior.Replace
    )
}

Patch "Disable Player Model Scaling" by "ĐeäTh" in "Graphics" does "Disables the scaling applied to Sonic's model during gameplay (includes a version of the 'Fix Pull Switch Grip Height' code in it, the use of the two together is unnecessary)."
// Nop out the app::GOCVisualTransformed::SetLocalScale(0.9f, 0.9f, 0.9f); in app::Player::RegisterBodyModel()
WriteNop(ASLR(0x008FE046), 41);

// Adjust Spin Model Spin Scale
WriteProtected<float>(ASLR(0x00E03670), 1.5f * 1.0f / 0.9f, 1.5f * 1.0f / 0.9f, 1.5f * 1.0f / 0.9f)

// Adjust Grip Position for Light Switches in Silent Forest Act 4
WriteProtected<float>(ASLR(0x00DF2D14), -11.7f)